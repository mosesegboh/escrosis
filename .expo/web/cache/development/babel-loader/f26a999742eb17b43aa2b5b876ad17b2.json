{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"hidePassword\", \"isPassword\", \"setHidePassword\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\jobs\\\\MyProjects\\\\react-native\\\\my-app\\\\screens\\\\Login.js\";\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Formik } from 'formik';\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, RightIcon, StyledButton, ButtonText, Colors, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent } from \"./../components/styles\";\nimport View from \"react-native-web/dist/exports/View\";\nvar brand = Colors.brand,\n    darkLight = Colors.darkLight,\n    primary = Colors.primary;\n\nvar Login = function Login() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  return React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(PageLogo, {\n    resizeMode: \"cover\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(PageTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Escrosis\"), React.createElement(SubTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Account Login\"), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, React.createElement(MyTextInput, {\n      label: \"Email Address\",\n      icon: \"mail\",\n      placeholder: \"mosesegboh@gmail.com\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Password\",\n      icon: \"lock\",\n      placeholder: \"* * * * * * \",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }), React.createElement(MsgBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"...\"), React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, \"Login\")), React.createElement(Line, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }), React.createElement(StyledButton, {\n      google: true,\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, React.createElement(Fontisto, {\n      name: \"google\",\n      color: \"primary\",\n      size: 25,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }), React.createElement(ButtonText, {\n      google: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Sign In With Google\")), React.createElement(ExtraView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, React.createElement(ExtraText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Don't have an account already? \"), React.createElement(TextLink, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, React.createElement(TextLinkContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, \"Sign Up\"))));\n  })));\n};\n\nvar MyTextInput = function MyTextInput(_ref2) {\n  var label = _ref2.label,\n      icon = _ref2.icon,\n      hidePassword = _ref2.hidePassword,\n      isPassword = _ref2.isPassword,\n      setHidePassword = _ref2.setHidePassword,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(LeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Octicons, {\n    name: icon,\n    size: 30,\n    color: brand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, label), React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? 'md-eye-off' : 'md-eye',\n    size: 30,\n    color: darkLight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/USER/Desktop/jobs/MyProjects/react-native/my-app/screens/Login.js"],"names":["React","useState","StatusBar","Formik","Octicons","Ionicons","Fontisto","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","RightIcon","StyledButton","ButtonText","Colors","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","brand","darkLight","primary","Login","hidePassword","setHidePassword","email","password","values","console","log","handleChange","handleBlur","handleSubmit","MyTextInput","label","icon","isPassword","props"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n//formik for our forms\r\nimport {Formik} from 'formik';\r\n\r\n//icons\r\nimport {Octicons, Ionicons, Fontisto} from '@expo/vector-icons';\r\n\r\n\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    SubTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n    RightIcon,\r\n    StyledButton,\r\n    ButtonText,\r\n    Colors,\r\n    MsgBox,\r\n    Line,\r\n    ExtraView,\r\n    ExtraText,\r\n    TextLink,\r\n    TextLinkContent,\r\n} from './../components/styles';\r\nimport {View } from 'react-native';\r\n\r\n//colors\r\nconst {brand, darkLight, primary} = Colors;\r\n\r\nconst Login = () => {\r\n    const [hidePassword, setHidePassword] = useState(true)\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StatusBar style=\"dark\"/>\r\n            <InnerContainer>\r\n                <PageLogo resizeMode=\"cover\" />\r\n                <PageTitle>Escrosis</PageTitle>\r\n                <SubTitle>Account Login</SubTitle>\r\n\r\n                <Formik\r\n                     initialValues={{email: '', password: ''}}\r\n                     onSubmit={(values) => {\r\n                         console.log(values);\r\n                     }}\r\n                >\r\n                    {({handleChange, handleBlur, handleSubmit, values}) => (\r\n                    <StyledFormArea>\r\n                        <MyTextInput \r\n                            label = \"Email Address\"\r\n                            icon = \"mail\"\r\n                            placeholder=\"mosesegboh@gmail.com\"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('email')}\r\n                            onBlur = {handleBlur('email')}  \r\n                            value={values.email}\r\n                            keyboardType = \"email-address\"\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Password\"\r\n                            icon = \"lock\"\r\n                            placeholder=\"* * * * * * \"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('password')}\r\n                            onBlur = {handleBlur('password')}  \r\n                            value={values.password}\r\n                            secureTextEntry={hidePassword}\r\n                            isPassword = {true}\r\n                            hidePassword = {hidePassword}\r\n                            setHidePassword = {setHidePassword}\r\n                        />\r\n                        <MsgBox>...</MsgBox>\r\n                        <StyledButton onPress={handleSubmit}>\r\n                            <ButtonText>\r\n                                Login\r\n                            </ButtonText>\r\n                        </StyledButton>\r\n                        <Line />\r\n                        <StyledButton google={true} onPress={handleSubmit}>\r\n                            <Fontisto name=\"google\" color=\"primary\" size={25}/>\r\n                            <ButtonText google={true}>\r\n                                Sign In With Google\r\n                            </ButtonText>\r\n                        </StyledButton>\r\n\r\n                        <ExtraView>\r\n                            <ExtraText>Don't have an account already? </ExtraText>\r\n                            <TextLink>\r\n                                <TextLinkContent>Sign Up</TextLinkContent>\r\n                            </TextLink>\r\n                        </ExtraView>\r\n                    </StyledFormArea>) }\r\n                </Formik>\r\n            </InnerContainer>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nconst MyTextInput = ({label, icon,hidePassword,isPassword, setHidePassword, ...props}) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={30} color={brand}/>\r\n            </LeftIcon>\r\n            <StyledInputLabel>{label}</StyledInputLabel>\r\n            <StyledTextInput {...props} />\r\n            {isPassword && (\r\n                <RightIcon onPress = {() => setHidePassword(!hidePassword)} > \r\n                    <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={30} color={darkLight}  />\r\n                </RightIcon>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}