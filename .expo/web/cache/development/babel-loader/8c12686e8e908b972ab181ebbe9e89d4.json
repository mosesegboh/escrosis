{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\jobs\\\\MyProjects\\\\react-native\\\\my-app\\\\screens\\\\MainTabScreen.js\";\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport SignUp from \"./SignUp\";\nimport Profile from \"./Profile\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport { DrawerContent } from \"./DrawerContent\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useTheme, Avatar } from 'react-native-paper';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport TabScreen from \"./TabScreen\";\nvar ProfileStack = createStackNavigator();\nvar TabStack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar Drawer = createDrawerNavigator();\nvar HomeStack = createStackNavigator();\n\nvar HomeStackScreen = function HomeStackScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(HomeStack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#009387\"\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      title: 'Overview',\n      headerLeft: function headerLeft() {\n        return React.createElement(Icon.Button, {\n          name: \"menu\",\n          size: 25,\n          backgroundColor: \"#009387\",\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar ProfileStackScreen = function ProfileStackScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(ProfileStack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#009387\"\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      headerLeft: function headerLeft() {\n        return React.createElement(Icon.Button, {\n          name: \"menu\",\n          size: 25,\n          backgroundColor: \"#009387\",\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar TabStackScreen = function TabStackScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(TabStack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#009387\"\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"Profile\",\n    component: TabScreen,\n    options: {\n      headerLeft: function headerLeft() {\n        return React.createElement(Icon.Button, {\n          name: \"menu\",\n          size: 25,\n          backgroundColor: \"#009387\",\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar MainTabScreen = function MainTabScreen() {\n  return React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 51\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Tab\",\n    component: TabStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default MainTabScreen;","map":{"version":3,"sources":["C:/Users/USER/Desktop/jobs/MyProjects/react-native/my-app/screens/MainTabScreen.js"],"names":["React","createStackNavigator","Icon","createDrawerNavigator","createBottomTabNavigator","MaterialCommunityIcons","SignUp","Profile","Home","Login","DrawerContent","NavigationContainer","useTheme","Avatar","TouchableOpacity","TabScreen","ProfileStack","TabStack","Tab","Drawer","HomeStack","HomeStackScreen","navigation","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title","headerLeft","openDrawer","ProfileStackScreen","TabStackScreen","MainTabScreen","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nimport SignUp from './SignUp';\r\nimport Profile from './Profile';\r\nimport Home from './Home';\r\n// import Details from './Details';\r\nimport Login from './Login';\r\nimport { DrawerContent } from './DrawerContent';\r\n\r\n//drawer navigator\r\n// import DrawerNavigator from '../navigators/DrawerNavigator';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nimport {useTheme, Avatar} from 'react-native-paper';\r\nimport {TouchableOpacity} from 'react-native-gesture-handler';\r\nimport TabScreen from './TabScreen';\r\n\r\n\r\nconst ProfileStack = createStackNavigator();\r\nconst TabStack = createStackNavigator();\r\n\r\nconst Tab = createBottomTabNavigator();\r\n//drawer navigator\r\nconst Drawer = createDrawerNavigator();\r\nconst HomeStack = createStackNavigator();\r\n// const ProfileStack = createStackNavigator();\r\n\r\nconst HomeStackScreen = ({navigation}) => (\r\n  <HomeStack.Navigator screenOptions = {{\r\n    headerStyle: {\r\n      backgroundColor:\"#009387\"\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle: {\r\n      fontWeight: 'bold'\r\n    }\r\n  }}>\r\n    <HomeStack.Screen name=\"Home\" component={Home} options={{\r\n      title: 'Overview',\r\n      headerLeft: () => (\r\n        <Icon.Button name=\"menu\" size={25} backgroundColor=\"#009387\" \r\n        onPress={()=>{navigation.openDrawer()}}\r\n        ></Icon.Button>\r\n      )\r\n    }}\r\n    />\r\n  </HomeStack.Navigator>\r\n);\r\n\r\n\r\nconst ProfileStackScreen = ({navigation}) => (\r\n  <ProfileStack.Navigator screenOptions = {{\r\n    headerStyle: {\r\n      backgroundColor:\"#009387\"\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle: {\r\n      fontWeight: 'bold'\r\n    }\r\n  }}>\r\n    <ProfileStack.Screen name=\"Profile\" component={Profile} options={{\r\n        headerLeft: () => (\r\n          <Icon.Button name=\"menu\" size={25} backgroundColor=\"#009387\" \r\n          onPress={()=>{navigation.openDrawer()}}\r\n          ></Icon.Button>\r\n        )\r\n    }}\r\n    />\r\n  </ProfileStack.Navigator>\r\n);\r\n\r\n\r\nconst TabStackScreen = ({navigation}) => (\r\n  <TabStack.Navigator screenOptions = {{\r\n    headerStyle: {\r\n      backgroundColor:\"#009387\"\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle: {\r\n      fontWeight: 'bold'\r\n    }\r\n  }}>\r\n    <ProfileStack.Screen name=\"Profile\" component={TabScreen} options={{\r\n        headerLeft: () => (\r\n          <Icon.Button name=\"menu\" size={25} backgroundColor=\"#009387\" \r\n          onPress={()=>{navigation.openDrawer()}}\r\n          ></Icon.Button>\r\n        )\r\n    }}\r\n    />\r\n  </TabStack.Navigator>\r\n);\r\n\r\nconst MainTabScreen = () => {\r\n    return (\r\n        <Drawer.Navigator drawerContent={props => < DrawerContent { ...props} /> }>\r\n          <Drawer.Screen name=\"Home\" component={HomeStackScreen} \r\n            // options={{\r\n            //   title: 'Overview',\r\n            //   headerLeft: () => (\r\n            //       <Icon.Button name=\"\" size={25} backgroundColor=\"#009387\" \r\n            //       options={()=>{navigation.openDrawer()}} \r\n            //       ></Icon.Button>\r\n            //   )\r\n            // }}\r\n          \r\n          />\r\n         < Drawer.Screen name=\"Tab\" component={TabStackScreen} />\r\n          {/* <Drawer.Screen name=\"Profile\" component={ProfileStackScreen} /> */}\r\n        </Drawer.Navigator>\r\n      \r\n\r\n\r\n\r\n        \r\n    //     <Tab.Navigator\r\n    //   initialRouteName=\"Feed\"\r\n    //   tabBarOptions={{\r\n    //     activeTintColor: '#e91e63',\r\n    //   }}\r\n    // >\r\n    //   <Tab.Screen\r\n    //     name=\"Feed\"\r\n    //     component={Home}\r\n    //     options={{\r\n    //       tabBarLabel: 'Home',\r\n    //       tabBarIcon: ({ color, size }) => (\r\n    //         <MaterialCommunityIcons name=\"home\" color={color} size={size} />\r\n    //       ),\r\n    //     }}\r\n    //   />\r\n    //   <Tab.Screen\r\n    //     name=\"Notifications\"\r\n    //     component={SignUp}\r\n    //     options={{\r\n    //       tabBarLabel: 'Updates',\r\n    //       tabBarIcon: ({ color, size }) => (\r\n    //         <MaterialCommunityIcons name=\"bell\" color={color} size={size} />\r\n    //       ),\r\n    //       tabBarBadge: 3,\r\n    //     }}\r\n    //   />\r\n    //   <Tab.Screen\r\n    //     name=\"Profile\"\r\n    //     component={Profile}\r\n    //     options={{\r\n    //       tabBarLabel: 'Profile',\r\n    //       tabBarIcon: ({ color, size }) => (\r\n    //         <MaterialCommunityIcons name=\"account\" color={color} size={size} />\r\n    //       ),\r\n    //     }}\r\n    //   />\r\n    //     <Tab.Screen\r\n    //     name=\"Details\"\r\n    //     component={Home}\r\n    //     options={{\r\n    //       tabBarLabel: 'Details',\r\n    //       tabBarIcon: ({ color, size }) => (\r\n    //         <MaterialCommunityIcons name=\"account\" color={color} size={size} />\r\n    //       ),\r\n    //     }}\r\n    //   />\r\n    // </Tab.Navigator>\r\n    \r\n\r\n    );\r\n};\r\n\r\nexport default MainTabScreen;\r\n\r\n// const ProfileStackScreen = ({navigation}) => {\r\n//   const {colors} = useTheme();\r\n\r\n//   return (\r\n//     <ProfileStack.Navigator\r\n//       screenOptions={{\r\n//         headerStyle: {\r\n//           backgroundColor: colors.background,\r\n//           shadowColor: colors.background, // iOS\r\n//           elevation: 0, // Android\r\n//         },\r\n//         headerTintColor: colors.text,\r\n//       }}>\r\n//       <ProfileStack.Screen\r\n//         name=\"Profile\"\r\n//         component={Profile}\r\n//         options={{\r\n//           title: '',\r\n//           headerLeft: () => (\r\n//             <View style={{marginLeft: 10}}>\r\n//               <Icon.Button\r\n//                 name=\"android-menu\"\r\n//                 size={25}\r\n//                 backgroundColor={colors.background}\r\n//                 color={colors.text}\r\n//                 onPress={() => navigation.openDrawer()}\r\n//               />\r\n//             </View>\r\n//           ),\r\n//           headerRight: () => (\r\n//             <View style={{marginRight: 10}}>\r\n//               <MaterialCommunityIcons.Button\r\n//                 name=\"account-edit\"\r\n//                 size={25}\r\n//                 backgroundColor={colors.background}\r\n//                 color={colors.text}\r\n//                 onPress={() => navigation.navigate('EditProfile')}\r\n//               />\r\n//             </View>\r\n//           ),\r\n//         }}\r\n//       />\r\n//       <ProfileStack.Screen\r\n//         name=\"EditProfile\"\r\n//         options={{\r\n//           title: 'Edit Profile',\r\n//         }}\r\n//         component={EditProfileScreen}\r\n//       />\r\n//     </ProfileStack.Navigator>\r\n//   );\r\n// };"]},"metadata":{},"sourceType":"module"}