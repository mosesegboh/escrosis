{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"hidePassword\", \"isPassword\", \"setHidePassword\", \"isDate\", \"showDatePicker\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\jobs\\\\MyProjects\\\\react-native\\\\my-app\\\\screens\\\\SignUp.js\";\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Formik } from 'formik';\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, RightIcon, StyledButton, ButtonText, Colors, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent } from \"./../components/styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar brand = Colors.brand,\n    darkLight = Colors.darkLight,\n    primary = Colors.primary;\nimport KeyboardAvoidingWrapper from \"./../components/KeyboardAvoidingWrapper\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nvar SignUp = function SignUp() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(new Date(2000, 0, 1)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dob = _useState8[0],\n      setDob = _useState8[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(false);\n    setDate(currentDate);\n    setDob(currentDate);\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setShow('date');\n  };\n\n  return React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(PageTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Escrosis\"), React.createElement(SubTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Account SignUp\"), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: \"date\",\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      fullName: '',\n      email: '',\n      dateOfBirth: '',\n      password: '',\n      confirmPassword: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, React.createElement(MyTextInput, {\n      label: \"Full Name\",\n      icon: \"person\",\n      placeholder: \"Egboh Moses\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('fullName'),\n      onBlur: handleBlur('fullName'),\n      value: values.fullName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Email Address\",\n      icon: \"mail\",\n      placeholder: \"mosesegboh@gmail.com\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Date Of Birth\",\n      icon: \"calendar\",\n      placeholder: \"YYYY - MM - DD\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('dateOfBirth'),\n      onBlur: handleBlur('dateOfBirth'),\n      value: dob ? dob.toDateString() : '',\n      isDate: true,\n      editable: false,\n      showDatePicker: showDatePicker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Password\",\n      icon: \"lock\",\n      placeholder: \"* * * * * * \",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Confirm Password\",\n      icon: \"lock\",\n      placeholder: \"* * * * * * \",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('confirmPassword'),\n      onBlur: handleBlur('confirmPassword'),\n      value: values.confirmPassword,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }), React.createElement(MsgBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, \"...\"), React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, \"Login\")), React.createElement(Line, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }), React.createElement(ExtraView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, React.createElement(ExtraText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, \"Already have an account \"), React.createElement(TextLink, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, React.createElement(TextLinkContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, \"Log In\"))));\n  }))));\n};\n\nvar MyTextInput = function MyTextInput(_ref2) {\n  var label = _ref2.label,\n      icon = _ref2.icon,\n      hidePassword = _ref2.hidePassword,\n      isPassword = _ref2.isPassword,\n      setHidePassword = _ref2.setHidePassword,\n      isDate = _ref2.isDate,\n      showDatePicker = _ref2.showDatePicker,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, React.createElement(LeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, React.createElement(Octicons, {\n    name: icon,\n    size: 30,\n    color: brand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  })), React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, label), !isDate && React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  })), isDate && React.createElement(TouchableOpacity, {\n    onPress: showDatePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }))), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? 'md-eye-off' : 'md-eye',\n    size: 30,\n    color: darkLight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/USER/Desktop/jobs/MyProjects/react-native/my-app/screens/SignUp.js"],"names":["React","useState","StatusBar","Formik","Octicons","Ionicons","Fontisto","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","RightIcon","StyledButton","ButtonText","Colors","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","brand","darkLight","primary","KeyboardAvoidingWrapper","DateTimePicker","SignUp","hidePassword","setHidePassword","show","setShow","Date","date","setDate","dob","setDob","onChange","event","selectedDate","currentDate","showDatePicker","fullName","email","dateOfBirth","password","confirmPassword","values","console","log","handleChange","handleBlur","handleSubmit","toDateString","MyTextInput","label","icon","isPassword","isDate","props"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n//formik for our forms\r\nimport {Formik} from 'formik';\r\n\r\n//icons\r\nimport {Octicons, Ionicons, Fontisto} from '@expo/vector-icons';\r\n\r\n\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    SubTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n    RightIcon,\r\n    StyledButton,\r\n    ButtonText,\r\n    Colors,\r\n    MsgBox,\r\n    Line,\r\n    ExtraView,\r\n    ExtraText,\r\n    TextLink,\r\n    TextLinkContent,\r\n} from './../components/styles';\r\nimport {View, TouchableOpacity } from 'react-native';\r\n\r\n//colors\r\nconst {brand, darkLight, primary} = Colors;\r\n\r\n//keyboard avaoiding view\r\nimport KeyboardAvoidingWrapper from './../components/KeyboardAvoidingWrapper';\r\n\r\n//import date time picker\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\nconst SignUp = () => {\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [date, setDate] = useState(new Date(2000, 0, 1));\r\n\r\n    //Actual date of birth the user picked\r\n    const [dob, setDob] = useState();\r\n\r\n    const onChange =  (event, selectedDate) => {\r\n        const currentDate = selectedDate || date;\r\n        setShow(false);\r\n        setDate(currentDate);\r\n        setDob(currentDate);\r\n    };\r\n\r\n    const showDatePicker = () => {\r\n        setShow('date');\r\n    };\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingWrapper>\r\n        <StyledContainer>\r\n            <StatusBar style=\"dark\"/>\r\n            <InnerContainer>\r\n                {/* <PageLogo resizeMode=\"cover\" /> */}\r\n                <PageTitle>Escrosis</PageTitle>\r\n                <SubTitle>Account SignUp</SubTitle>\r\n\r\n                {show && (\r\n                    <DateTimePicker\r\n                    testID=\"dateTimePicker\"\r\n                    value={date}\r\n                    mode='date'\r\n                    is24Hour={true}\r\n                    display=\"default\"\r\n                    onChange={onChange}\r\n                    />\r\n                )}\r\n\r\n                <Formik\r\n                     initialValues={{fullName: '',email: '', dateOfBirth: '', password: '', confirmPassword: ''}}\r\n                     onSubmit={(values) => {\r\n                         console.log(values);\r\n                     }}\r\n                >\r\n                    {({handleChange, handleBlur, handleSubmit, values}) => (\r\n                    <StyledFormArea>\r\n                        <MyTextInput \r\n                            label = \"Full Name\"\r\n                            icon = \"person\"\r\n                            placeholder=\"Egboh Moses\"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('fullName')}\r\n                            onBlur = {handleBlur('fullName')}  \r\n                            value={values.fullName}\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Email Address\"\r\n                            icon = \"mail\"\r\n                            placeholder=\"mosesegboh@gmail.com\"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('email')}\r\n                            onBlur = {handleBlur('email')}  \r\n                            value={values.email}\r\n                            keyboardType = \"email-address\"\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Date Of Birth\"\r\n                            icon = \"calendar\"\r\n                            placeholder=\"YYYY - MM - DD\"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('dateOfBirth')}\r\n                            onBlur = {handleBlur('dateOfBirth')}  \r\n                            value={dob ? dob.toDateString() : ''}\r\n                            isDate = {true}\r\n                            editable = {false}\r\n                            showDatePicker = {showDatePicker}\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Password\"\r\n                            icon = \"lock\"\r\n                            placeholder=\"* * * * * * \"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('password')}\r\n                            onBlur = {handleBlur('password')}  \r\n                            value={values.password}\r\n                            secureTextEntry={hidePassword}\r\n                            isPassword = {true}\r\n                            hidePassword = {hidePassword}\r\n                            setHidePassword = {setHidePassword}\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Confirm Password\"\r\n                            icon = \"lock\"\r\n                            placeholder=\"* * * * * * \"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('confirmPassword')}\r\n                            onBlur = {handleBlur('confirmPassword')}  \r\n                            value={values.confirmPassword}\r\n                            secureTextEntry={hidePassword}\r\n                            isPassword = {true}\r\n                            hidePassword = {hidePassword}\r\n                            setHidePassword = {setHidePassword}\r\n                        />\r\n\r\n                        <MsgBox>...</MsgBox>\r\n                        <StyledButton onPress={handleSubmit}>\r\n                            <ButtonText>\r\n                                Login\r\n                            </ButtonText>\r\n                        </StyledButton>\r\n                        <Line />\r\n\r\n                        <ExtraView>\r\n                            <ExtraText>Already have an account </ExtraText>\r\n                            <TextLink>\r\n                                <TextLinkContent>Log In</TextLinkContent>\r\n                            </TextLink>\r\n                        </ExtraView>\r\n                    </StyledFormArea>) }\r\n                </Formik>\r\n            </InnerContainer>\r\n        </StyledContainer>\r\n        </KeyboardAvoidingWrapper>\r\n    );\r\n};\r\n\r\nconst MyTextInput = ({label, icon,hidePassword,isPassword, setHidePassword, isDate, showDatePicker, ...props}) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={30} color={brand}/>\r\n            </LeftIcon>\r\n            <StyledInputLabel>{label}</StyledInputLabel>\r\n            {!isDate && <StyledTextInput {...props} />}\r\n            {isDate && (<TouchableOpacity onPress={showDatePicker}>\r\n                <StyledTextInput {...props} />\r\n                </TouchableOpacity>)}\r\n            {isPassword && (\r\n                <RightIcon onPress = {() => setHidePassword(!hidePassword)} > \r\n                    <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={30} color={darkLight}  />\r\n                </RightIcon>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}