{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"hidePassword\", \"isPassword\", \"setHidePassword\", \"isDate\", \"showDatePicker\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\jobs\\\\MyProjects\\\\react-native\\\\my-app\\\\screens\\\\SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Formik } from 'formik';\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, RightIcon, StyledButton, ButtonText, Colors, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent } from \"./../components/styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar brand = Colors.brand,\n    darkLight = Colors.darkLight,\n    primary = Colors.primary;\nimport KeyboardAvoidingWrapper from \"./../components/KeyboardAvoidingWrapper\";\nimport axios from 'axios';\nimport { AsyncStorage } from '@react-native-async-storage/async-storage';\nimport { credentialsContext } from \"./../components/CredentialsContext\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(new Date(2000, 0, 1)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messageType = _useState10[0],\n      setMessageType = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dob = _useState12[0],\n      setDob = _useState12[1];\n\n  var _useContext = useContext(credentialsContext),\n      storedCredentials = _useContext.storedCredentials,\n      setStoredCredentials = _useContext.setStoredCredentials;\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(false);\n    setDate(currentDate);\n    setDob(currentDate);\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setShow('date');\n  };\n\n  var handleSignUp = function handleSignUp(credentials, setSubmitting) {\n    handleMessage(null);\n    var config = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Accept': 'application/json'\n    };\n    var url = 'http://10.91.20.144:5000/user/signup';\n    axios.post(url, credentials, config).then(function (response) {\n      var result = response.data;\n      var message = result.message,\n          status = result.status,\n          data = result.data;\n\n      if (status !== 'SUCCESS') {\n        handleMessage(message, status);\n      } else {\n        persistLogin(_objectSpread({}, data), message, status);\n      }\n\n      setSubmitting(false);\n    }).catch(function (error) {\n      console.log(error);\n      setSubmitting(false);\n      handleMessage(\"An error occured. Check your network and try again!\");\n    });\n  };\n\n  var handleMessage = function handleMessage(message) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'FAILED';\n    setMessage(message);\n    setMessageType(type);\n  };\n\n  var persistLogin = function persistLogin(credentials, message, status) {\n    AsyncStorage.setItem('myAppCredentials', JSON.stringify(credentials)).then(function () {\n      handleMessage(message, status);\n      setStoredCredentials(credentials);\n    }).catch(function (error) {\n      console.log(error);\n      handleMessage('persisting login failed');\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(PageTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Escrosis\"), React.createElement(SubTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Account SignUp\"), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: \"date\",\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      email: '',\n      dateOfBirth: '',\n      password: '',\n      confirmPassword: ''\n    },\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting;\n      values = _objectSpread(_objectSpread({}, values), {}, {\n        dateOfBirth: dob\n      });\n\n      if (values.email == '' || values.password == '' || values.username == '' || values.dateOfBirth == '' || values.confirmPassword == '') {\n        handleMessage('Please fill all fields');\n        setSubmitting(false);\n      } else if (values.password !== values.confirmPassword) {\n        handleMessage('Passwords do not match');\n        setSubmitting(false);\n      } else {\n        handleSignUp(values, setSubmitting);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values,\n        isSubmitting = _ref3.isSubmitting;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, React.createElement(MyTextInput, {\n      label: \"Full Name\",\n      icon: \"person\",\n      placeholder: \"Egboh Moses\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('username'),\n      onBlur: handleBlur('username'),\n      value: values.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Email Address\",\n      icon: \"mail\",\n      placeholder: \"mosesegboh@gmail.com\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Date Of Birth\",\n      icon: \"calendar\",\n      placeholder: \"YYYY - MM - DD\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('dateOfBirth'),\n      onBlur: handleBlur('dateOfBirth'),\n      value: dob ? dob.toDateString() : '',\n      isDate: true,\n      editable: false,\n      showDatePicker: showDatePicker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Password\",\n      icon: \"lock\",\n      placeholder: \"* * * * * * \",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"Confirm Password\",\n      icon: \"lock\",\n      placeholder: \"* * * * * * \",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange('confirmPassword'),\n      onBlur: handleBlur('confirmPassword'),\n      value: values.confirmPassword,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }), React.createElement(MsgBox, {\n      type: messageType,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, message), !isSubmitting && React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 44\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 29\n      }\n    }, \"Sign Up\")), isSubmitting && React.createElement(StyledButton, {\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 43\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: primary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 29\n      }\n    })), React.createElement(Line, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }), React.createElement(ExtraView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }, React.createElement(ExtraText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, \"Already have an account \"), React.createElement(TextLink, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 29\n      }\n    }, React.createElement(TextLinkContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    }, \"Sign In\"))));\n  }))));\n};\n\nvar MyTextInput = function MyTextInput(_ref4) {\n  var label = _ref4.label,\n      icon = _ref4.icon,\n      hidePassword = _ref4.hidePassword,\n      isPassword = _ref4.isPassword,\n      setHidePassword = _ref4.setHidePassword,\n      isDate = _ref4.isDate,\n      showDatePicker = _ref4.showDatePicker,\n      props = _objectWithoutProperties(_ref4, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, React.createElement(LeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, React.createElement(Octicons, {\n    name: icon,\n    size: 30,\n    color: brand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  })), React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, label), !isDate && React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  })), isDate && React.createElement(TouchableOpacity, {\n    onPress: showDatePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }, React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }))), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? 'md-eye-off' : 'md-eye',\n    size: 30,\n    color: darkLight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/USER/Desktop/jobs/MyProjects/react-native/my-app/screens/SignUp.js"],"names":["React","useState","useContext","StatusBar","Formik","Octicons","Ionicons","Fontisto","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","RightIcon","StyledButton","ButtonText","Colors","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","brand","darkLight","primary","KeyboardAvoidingWrapper","axios","AsyncStorage","credentialsContext","DateTimePicker","SignUp","navigation","hidePassword","setHidePassword","show","setShow","Date","date","setDate","message","setMessage","messageType","setMessageType","dob","setDob","storedCredentials","setStoredCredentials","onChange","event","selectedDate","currentDate","showDatePicker","handleSignUp","credentials","setSubmitting","handleMessage","config","url","post","then","response","result","data","status","persistLogin","catch","error","console","log","type","setItem","JSON","stringify","username","email","dateOfBirth","password","confirmPassword","values","handleChange","handleBlur","handleSubmit","isSubmitting","toDateString","navigate","MyTextInput","label","icon","isPassword","isDate","props"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n//formik for our forms\r\nimport {Formik} from 'formik';\r\n\r\n//icons\r\nimport {Octicons, Ionicons, Fontisto} from '@expo/vector-icons';\r\n\r\n\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    SubTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n    RightIcon,\r\n    StyledButton,\r\n    ButtonText,\r\n    Colors,\r\n    MsgBox,\r\n    Line,\r\n    ExtraView,\r\n    ExtraText,\r\n    TextLink,\r\n    TextLinkContent,\r\n} from './../components/styles';\r\nimport {View, TouchableOpacity, ActivityIndicator } from 'react-native';\r\n\r\n//colors\r\nconst {brand, darkLight, primary} = Colors;\r\n\r\n//keyboard avaoiding view\r\nimport KeyboardAvoidingWrapper from './../components/KeyboardAvoidingWrapper';\r\n\r\n//import axios\r\nimport axios from 'axios';\r\n\r\n//async storage\r\nimport  {AsyncStorage}  from '@react-native-async-storage/async-storage';\r\n\r\n//credentials context\r\nimport { credentialsContext } from './../components/CredentialsContext';\r\n\r\n//import date time picker\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\nconst SignUp = ({navigation}) => {\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [date, setDate] = useState(new Date(2000, 0, 1));\r\n\r\n     //state varible to handle message and message type.\r\n     const [message, setMessage] = useState();\r\n     const [messageType, setMessageType] = useState();\r\n\r\n    //Actual date of birth the user picked\r\n    const [dob, setDob] = useState();\r\n\r\n    //thesame thing as the context consumer\r\n    //destructure our stored credentials from the context\r\n    const {storedCredentials, setStoredCredentials} = useContext(credentialsContext);\r\n\r\n    const onChange =  (event, selectedDate) => {\r\n        const currentDate = selectedDate || date;\r\n        setShow(false);\r\n        setDate(currentDate);\r\n        setDob(currentDate);\r\n    };\r\n\r\n    const showDatePicker = () => {\r\n        setShow('date');\r\n    };\r\n\r\n\r\n    //handle sign up\r\n     const handleSignUp = (credentials, setSubmitting) => {\r\n         handleMessage(null);\r\n         const config = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n                     'Accept': 'application/json',\r\n           };\r\n         const url = 'http://10.91.20.144:5000/user/signup'\r\n     axios.post(url, credentials, config)\r\n     .then((response)=>{\r\n         const result = response.data;\r\n         const {message, status, data} = result;\r\n \r\n         //check the status of the message, ref styled component\r\n         if( status !== 'SUCCESS' ) {\r\n             handleMessage(message, status);\r\n         }else{\r\n            //  navigation.navigate('Welcome', {...data});\r\n             persistLogin({...data}, message,status);\r\n         }\r\n         setSubmitting(false);\r\n \r\n     }).catch((error) => {\r\n         console.log(error);\r\n         setSubmitting(false);\r\n         handleMessage(\"An error occured. Check your network and try again!\")\r\n     });\r\n     };\r\n\r\n      //function to handle the message\r\n    const handleMessage = (message, type = 'FAILED') => {\r\n        setMessage(message);\r\n        setMessageType(type);\r\n    }\r\n\r\n    const persistLogin = (credentials, message, status) => {\r\n        AsyncStorage.setItem('myAppCredentials', JSON.stringify(credentials))\r\n        .then(() => {\r\n            handleMessage(message, status);\r\n            setStoredCredentials(credentials);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            handleMessage('persisting login failed');\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingWrapper>\r\n        <StyledContainer>\r\n            <StatusBar style=\"dark\"/>\r\n            <InnerContainer>\r\n                {/* <PageLogo resizeMode=\"cover\" /> */}\r\n                <PageTitle>Escrosis</PageTitle>\r\n                <SubTitle>Account SignUp</SubTitle>\r\n\r\n                {show && (\r\n                    <DateTimePicker\r\n                    testID=\"dateTimePicker\"\r\n                    value={date}\r\n                    mode='date'\r\n                    is24Hour={true}\r\n                    display=\"default\"\r\n                    onChange={onChange}\r\n                    />\r\n                )}\r\n\r\n                <Formik\r\n                     initialValues={{username: '',email: '', dateOfBirth: '', password: '', confirmPassword: ''}}\r\n                     onSubmit={(values, {setSubmitting}) => {\r\n                         values = {...values, dateOfBirth: dob}\r\n                        if (values.email == '' ||\r\n                            values.password == '' || \r\n                            values.username == '' || \r\n                            values.dateOfBirth == '' || \r\n                            values.confirmPassword == '') {\r\n                            handleMessage('Please fill all fields');\r\n                            setSubmitting(false) \r\n                        }else if( values.password !== values.confirmPassword ) {\r\n                            handleMessage('Passwords do not match');\r\n                            setSubmitting(false) \r\n                        }\r\n                        else{\r\n                            handleSignUp(values, setSubmitting);\r\n                        }\r\n                     }}\r\n                >\r\n                    {({handleChange, handleBlur, handleSubmit, values, isSubmitting}) => (\r\n                    <StyledFormArea>\r\n                        <MyTextInput \r\n                            label = \"Full Name\"\r\n                            icon = \"person\"\r\n                            placeholder=\"Egboh Moses\"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('username')}\r\n                            onBlur = {handleBlur('username')}  \r\n                            value={values.username}\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Email Address\"\r\n                            icon = \"mail\"\r\n                            placeholder=\"mosesegboh@gmail.com\"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('email')}\r\n                            onBlur = {handleBlur('email')}  \r\n                            value={values.email}\r\n                            keyboardType = \"email-address\"\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Date Of Birth\"\r\n                            icon = \"calendar\"\r\n                            placeholder=\"YYYY - MM - DD\"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('dateOfBirth')}\r\n                            onBlur = {handleBlur('dateOfBirth')}  \r\n                            value={dob ? dob.toDateString() : ''}\r\n                            isDate = {true}\r\n                            editable = {false}\r\n                            showDatePicker = {showDatePicker}\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Password\"\r\n                            icon = \"lock\"\r\n                            placeholder=\"* * * * * * \"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('password')}\r\n                            onBlur = {handleBlur('password')}  \r\n                            value={values.password}\r\n                            secureTextEntry={hidePassword}\r\n                            isPassword = {true}\r\n                            hidePassword = {hidePassword}\r\n                            setHidePassword = {setHidePassword}\r\n                        />\r\n\r\n                        <MyTextInput \r\n                            label = \"Confirm Password\"\r\n                            icon = \"lock\"\r\n                            placeholder=\"* * * * * * \"\r\n                            placeholderTextColor = {darkLight}\r\n                            onChangeText = {handleChange('confirmPassword')}\r\n                            onBlur = {handleBlur('confirmPassword')}  \r\n                            value={values.confirmPassword}\r\n                            secureTextEntry={hidePassword}\r\n                            isPassword = {true}\r\n                            hidePassword = {hidePassword}\r\n                            setHidePassword = {setHidePassword}\r\n                        />\r\n\r\n                        <MsgBox type={messageType}>{message}</MsgBox>\r\n                        \r\n                        {!isSubmitting && (<StyledButton onPress={handleSubmit}>\r\n                            <ButtonText>\r\n                                Sign Up\r\n                            </ButtonText>\r\n                        </StyledButton>)}\r\n\r\n                        {isSubmitting && (<StyledButton disabled={true}>\r\n                            <ActivityIndicator size=\"large\" color={primary} />\r\n                        </StyledButton>)}\r\n                        <Line />\r\n\r\n                        <ExtraView>\r\n                            <ExtraText>Already have an account </ExtraText>\r\n                            <TextLink onPress={()=>navigation.navigate('Login')}>\r\n                                <TextLinkContent>Sign In</TextLinkContent>\r\n                            </TextLink>\r\n                        </ExtraView>\r\n                    </StyledFormArea>) }\r\n                </Formik>\r\n            </InnerContainer>\r\n        </StyledContainer>\r\n        </KeyboardAvoidingWrapper>\r\n    );\r\n};\r\n\r\nconst MyTextInput = ({label, icon,hidePassword,isPassword, setHidePassword, isDate, showDatePicker, ...props}) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={30} color={brand}/>\r\n            </LeftIcon>\r\n            <StyledInputLabel>{label}</StyledInputLabel>\r\n            {!isDate && <StyledTextInput {...props} />}\r\n            {isDate && (<TouchableOpacity onPress={showDatePicker}>\r\n                <StyledTextInput {...props} />\r\n                </TouchableOpacity>)}\r\n            {isPassword && (\r\n                <RightIcon onPress = {() => setHidePassword(!hidePassword)} > \r\n                    <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={30} color={darkLight}  />\r\n                </RightIcon>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}